version: 2.1
description: |
    This orb installs and configure Blackfire agent and CLI tool.
    You need an account on https://blackfire.io to use this orb.

    Blackfire is the Code Performance Management solution for developers
    to find and fix performance bottlenecks in dev, test/staging and production.

    The "agent" is the component that aggregates profile data collected by the probe from your application engine
    (PHP, Python...), before sending it to Blackfire.io servers so that you can display and analyze it.

display:
    home_url: https://blackfire.io/
    source_url: https://github.com/blackfireio/integration-circleci

commands:
    register:
        description: Registers Blackfire agent and CLI tool with your credentials passed as environment variables.

        parameters:
            server_id:
                description: Environment variable name in which your server ID is stored.
                type: env_var_name
                default: BLACKFIRE_SERVER_ID
            server_token:
                description: Environment variable name in which your server token is stored.
                type: env_var_name
                default: BLACKFIRE_SERVER_TOKEN
            client_id:
                description: Environment variable name in which your client ID is stored.
                type: env_var_name
                default: BLACKFIRE_CLIENT_ID
            client_token:
                description: Environment variable name in which your client token is stored.
                type: env_var_name
                default: BLACKFIRE_CLIENT_TOKEN

        steps:
            - run:
                  name: 'Blackfire: Sanity checks'
                  command: |
                      function test_env_var {
                          if [ -z "$(printenv $1)" ]; then
                              echo "Error: ${1} is empty. Please ensure the environment variable ${1} has been added."
                              exit 1
                          fi
                      }
                      test_env_var << parameters.server_id >>
                      test_env_var << parameters.server_token >>
                      test_env_var << parameters.client_id >>
                      test_env_var << parameters.client_token >>

            - run:
                  name: 'Blackfire: Register agent and client'
                  command: |
                      if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
                      $SUDO blackfire-agent -register \
                          --server-id=${<< parameters.server_id >>} \
                          --server-token=${<< parameters.server_token >>}
                      $SUDO /etc/init.d/blackfire-agent restart
                      blackfire config \
                          --client-id=${<< parameters.client_id >>} \
                          --client-token=${<< parameters.client_token >>}

    setup:
        description: Installs and configures Blackfire agent.

        parameters:
            server_id:
                description: Environment variable name in which your server ID is stored.
                type: env_var_name
                default: BLACKFIRE_SERVER_ID
            server_token:
                description: Environment variable name in which your server token is stored.
                type: env_var_name
                default: BLACKFIRE_SERVER_TOKEN
            client_id:
                description: Environment variable name in which your client ID is stored.
                type: env_var_name
                default: BLACKFIRE_CLIENT_ID
            client_token:
                description: Environment variable name in which your client token is stored.
                type: env_var_name
                default: BLACKFIRE_CLIENT_TOKEN

        steps:
            - run:
                  name: 'Blackfire: Install Debian package'
                  command: |
                      if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
                      wget -q -O - https://packages.blackfire.io/gpg.key | $SUDO apt-key add -
                      echo "deb http://packages.blackfire.io/debian any main" | $SUDO tee /etc/apt/sources.list.d/blackfire.list
                      $SUDO apt update
                      $SUDO apt-get install blackfire-agent
                      echo ""
                      blackfire-agent -v
                      blackfire version

            - register:
                  server_id: << parameters.server_id >>
                  server_token: << parameters.server_token >>
                  client_id: << parameters.client_id >>
                  client_token: << parameters.client_token >>

    setup-redhat:
        description: Installs and configures Blackfire agent in a RedHat environment.

        parameters:
            server_id:
                description: Environment variable name in which your server ID is stored.
                type: env_var_name
                default: BLACKFIRE_SERVER_ID
            server_token:
                description: Environment variable name in which your server token is stored.
                type: env_var_name
                default: BLACKFIRE_SERVER_TOKEN
            client_id:
                description: Environment variable name in which your client ID is stored.
                type: env_var_name
                default: BLACKFIRE_CLIENT_ID
            client_token:
                description: Environment variable name in which your client token is stored.
                type: env_var_name
                default: BLACKFIRE_CLIENT_TOKEN

        steps:
            - run:
                  name: 'Blackfire: Install RedHat package'
                  command: |
                      if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
                      $SUDO yum install pygpgme
                      wget -O - "http://packages.blackfire.io/fedora/blackfire.repo" | $SUDO tee /etc/yum.repos.d/blackfire.repo
                      $SUDO yum install blackfire-agent
                      echo "\n"
                      blackfire-agent -v
                      blackfire version

            - register:
                  server_id: << parameters.server_id >>
                  server_token: << parameters.server_token >>
                  client_id: << parameters.client_id >>
                  client_token: << parameters.client_token >>

examples:
    install_agent:
        description: Easily install and configure the Blackfire agent
        usage:
            version: 2.1

            orbs:
                blackfire-agent: blackfireio/agent@x.y

            jobs:
                blackfire-agent-example:
                    docker:
                        - image: circleci/php:7.3-node
                    steps:
                        - checkout
                        - blackfire-agent/setup